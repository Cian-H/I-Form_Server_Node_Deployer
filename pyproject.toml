[tool.poetry]
name = "i-form-server-node-deployer"
version = "0.1.0"
description = "A tool for automatically deploying nodes in a cluster server for research environments."
urls={github = "https://github.com/Cian-H/I-Form_Server_Node_Deployer"}
authors = ["Cian Hughes <cian.hughes@dcu.ie>"]
readme = "README.md"
license = "MIT"
packages = [
    {include = "node_deployer", from = "src"},
    {include = "node_deployer_gui", from = "src"},
]

[tool.poetry.dependencies]
python = "^3.12"
typer = {extras = ["all"], version = "^0.9.0"}
selenium = "^4.14.0"
mechanicalsoup = "^1.3.0"
docker = "^6.1.3"
requests = "^2.31.0"
gitpython = "^3.1.40"
fsspec = "^2023.10.0"
mkdocs-git-revision-date-localized-plugin = "^1.2.1"
mkdocs-material = {extras = ["all"], version = "^9.4.8"}

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.1"
black = "^23.10.1"
snoop = "^0.4.3"
mypy = "^1.6.1"
docker-stubs = {git = "https://github.com/rdozier-work/docker-stubs"}
pytest = "^7.4.3"
hypothesis = "^6.88.3"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}
mkdocs-material = "^9.4.8"

[tool.poetry.group.gui.dependencies]
flet = "^0.11.0"
psutil = "^5.9.6"
types-psutil = "^5.9.5.17"
bidict = "^0.22.1"

[tool.poetry.scripts]
node_deployer = "node_deployer.__main__:main"
debug_node_deployer = "node_deployer.__main__:debug"
build_docs = "scripts.docs:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
module="flet.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module="flet_core.*"
ignore_missing_imports = true

[tool.black]
line-length = 100

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 100
select = ["E", "F"]

[tool.ruff.isort]
force-sort-within-sections = true
lines-after-imports = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
pythonpath = [
    ".venv/bin/python",
]